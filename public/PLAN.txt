
There are many levels to this game. 
Lots of abtraction. 

This is A platforming game.
Basic Components include:
1. platforms
2. player(s)
3. obstacles
4. enemies

The structure of the game is as follows:
1. Top Level Game Handler Object - Reponsible for containing all relevant handlers. This controls game clock speed, handles user input, window size, and game termination and beginning amongst other things (elaborate).
Various Handlers (intermediates)
2. Player Handler
3. Level Handler
4. Score Handler
Basic Classes
5. Physics 
6. Player Class
7. Obstacle Class
8. Enemy class

CHECKPOINT 1! 
On initalization of the game.
1. One Game Handler will be created
2. The Game Handler will create all necessary components
3. The first level will start

OPEN QUESTIONS:
1. What determines Player Speed? is it:
	a. the level
	b. upgrades (i.e. the player)
	c. the user (i.e. the game) ##THIS ONE##


Git Branches:
1. Master
2. Dev
3. 1 feature branch per person
4. 5 branches max, 5 branches minimum

--------
UPDATES
:Hsing Health
:Heng show the player in the game


				/--->player->playerHandler------\
---Items--->|Game|								|-->physicsHandler<-->Matter.js
				\-Obtsacles->levelHandler-------/			/
RenderHandler<---------------------------------------------/

MATTERJS is Hard!!
What do we need matter js for anyway?
Simulate the physics.
what functions do we need to learn in order to use matter js?

1. Simulate Physics -----------------------Matter.Engine.update(engine)
2. Add items to the world -----------------Matter.Composite.add(comp,item)
3. Pull item data from the world ----------
4. Manipulate objects while in the world--
